<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel><title>Ballmerpeak devblog</title><link>http://ballmerpeak.web.elte.hu/devblog</link>
<description>Software development, related stuff and others</description><language>en</language>
<lastBuildDate>Wed, 26 Feb 2020 16:24:13 +0100</lastBuildDate>
<pubDate>Wed, 26 Feb 2020 16:24:13 +0100</pubDate>
<atom:link href="http://ballmerpeak.web.elte.hu/devblog/feed.rss" rel="self" type="application/rss+xml" />
<item><title>
Why I like statically typed languages
</title><description><![CDATA[

<p>People usually fall into one of the static vs. dynamic languages fanboy group. 
I always preferred that static languages where types can be determined at the
compile time, but I use languages from both worlds. Now I met the kind of error 
that shines light on why I prefer static languages though. Read on!</p>

<h1>Usual reasons to use static vs. dynamic type systems</h1>
<p>Tags: <a href='tag_static.html'>static</a>, <a href='tag_dynamic.html'>dynamic</a>, <a href='tag_type.html'>type</a>, <a href='tag_language.html'>language</a>, <a href='tag_comparison.html'>comparison</a>, <a href='tag_which-is-better.html'>which-is-better</a>, <a href='tag_rant.html'>rant</a>, <a href='tag_reality.html'>reality</a></p>
]]></description><link>http://ballmerpeak.web.elte.hu/devblog/why-i-like-statically-typed-languages.html</link>
<guid>http://ballmerpeak.web.elte.hu/devblog/./why-i-like-statically-typed-languages.html</guid>
<dc:creator>Richárd Thier</dc:creator>
<pubDate>Mon, 24 Feb 2020 15:34:00 +0100</pubDate></item>
<item><title>
2020: Re-sharing posts of your company on facebook and linkedin on personal timeline
</title><description><![CDATA[

<p>If you want to know how to re-share our own posts as a person on social media 
instead of paying high amount of money advertising your business pages, read 
on. It is not hard once you know it, but social media suppliers did hide it!</p>

<h1>Problem statement</h1>
<p>Tags: <a href='tag_re.html'>re</a>, <a href='tag_share.html'>share</a>, <a href='tag_company.html'>company</a>, <a href='tag_post.html'>post</a>, <a href='tag_facebook.html'>facebook</a>, <a href='tag_linkedin.html'>linkedin</a>, <a href='tag_social.html'>social</a>, <a href='tag_media.html'>media</a>, <a href='tag_advertisement.html'>advertisement</a>, <a href='tag_online.html'>online</a>, <a href='tag_marketing.html'>marketing</a>, <a href='tag_tricks.html'>tricks</a>, <a href='tag_social-media.html'>social-media</a>, <a href='tag_company.html'>company</a>, <a href='tag_owner.html'>owner</a>, <a href='tag_tips.html'>tips</a></p>
]]></description><link>http://ballmerpeak.web.elte.hu/devblog/2020-re-sharing-posts-of-your-company-on-facebook-and-linkedin-on-personal-timeline.html</link>
<guid>http://ballmerpeak.web.elte.hu/devblog/./2020-re-sharing-posts-of-your-company-on-facebook-and-linkedin-on-personal-timeline.html</guid>
<dc:creator>Richárd Thier</dc:creator>
<pubDate>Thu, 30 Jan 2020 14:18:00 +0100</pubDate></item>
<item><title>
Holiday DIY hobby electronics Christmas tree
</title><description><![CDATA[

<p>When I was a kid my dad made me a little blinking "Christmas tree" out of a 
"cone" from a pine and some little electronics and leds. When last year I saw 
the nice blinky presents I got together for free when odering from local hobby 
electric shop I though the next Christmas will be the perfect time for making 
from that circuit what my dad once did for me as a present for my girlfriend.</p>

<p>Then I thought why not write a tutorial about it so others can build - maybe 
even foreign people who did not see the Hungarian tutorial for it of course?</p>

<h1>The end result</h1>
<p>Tags: <a href='tag_DIY.html'>DIY</a>, <a href='tag_Christmas.html'>Christmas</a>, <a href='tag_electronics.html'>electronics</a>, <a href='tag_hobby.html'>hobby</a>, <a href='tag_present.html'>present</a>, <a href='tag_tutorial.html'>tutorial</a>, <a href='tag_tree.html'>tree</a>, <a href='tag_blinking.html'>blinking</a>, <a href='tag_circuit.html'>circuit</a>, <a href='tag_beginner.html'>beginner</a>, <a href='tag_hestore.html'>hestore</a>, <a href='tag_hestoreplexing.html'>hestoreplexing</a>, <a href='tag_charlieplexing.html'>charlieplexing</a></p>
]]></description><link>http://ballmerpeak.web.elte.hu/devblog/holyday-diy-hobby-electronics-christmas-tree.html</link>
<guid>http://ballmerpeak.web.elte.hu/devblog/./holyday-diy-hobby-electronics-christmas-tree.html</guid>
<dc:creator>Richárd Thier</dc:creator>
<pubDate>Tue, 24 Dec 2019 06:27:00 +0100</pubDate></item>
<item><title>
Make it work 3: Nexus - The Jupiter Incident
</title><description><![CDATA[

<p>This post is about making the game in the title run on linux. Might be helpful 
for anyone who has 3D glitches for this or any other games when played in wine.</p>

<p>Now after I had changed my linux distro to an arch machine I had to reinstall 
some of my games that I made run well earlier. These were sometimes cases that 
are much less interesting then disassembling GT97 racing as before so I did 
not blog about these and sometimes I had no notes on how to make them work.</p>

<p>Now as I redo these things it became visible that it is worth noting this kind 
of information too because one can easily forget what was the key and thus I 
can see now that others might be interested in the process too.</p>

<h1>State of the game as-is</h1>
<p>Tags: <a href='tag_make-it-work.html'>make-it-work</a>, <a href='tag_retro.html'>retro</a>, <a href='tag_linux.html'>linux</a>, <a href='tag_gaming.html'>gaming</a>, <a href='tag_wine.html'>wine</a>, <a href='tag_nexus.html'>nexus</a>, <a href='tag_the-jupiter-incident.html'>the-jupiter-incident</a>, <a href='tag_install.html'>install</a>, <a href='tag_hack.html'>hack</a>, <a href='tag_custom.html'>custom</a>, <a href='tag_resolution.html'>resolution</a>, <a href='tag_swiftshader.html'>swiftshader</a>, <a href='tag_directx.html'>directx</a>, <a href='tag_glitch.html'>glitch</a></p>
]]></description><link>http://ballmerpeak.web.elte.hu/devblog/make-it-work-3-nexus---the-jupiter-incident.html</link>
<guid>http://ballmerpeak.web.elte.hu/devblog/./make-it-work-3-nexus---the-jupiter-incident.html</guid>
<dc:creator>Richárd Thier</dc:creator>
<pubDate>Tue, 03 Sep 2019 00:07:00 +0200</pubDate></item>
<item><title>
How we speak with computers
</title><description><![CDATA[

<p>Once my high-school friend asked "how a bunch of bytes can mean something?" 
and he wanted to have a clue on how a computer "magically works".</p>

<p>Back then I already knew it, because I have started up my programing with the 
assembly programming language, which is practically machine language and also 
I knew about very basic electronics at least. But what if you are not knowing 
these things? What if you know computers quite well, but you are neither a 
programmer, neither anyone who uses a soldering iron ever?</p>

<p>I will try my best to explain how a very simple computer really works. Read on.</p>

<h1>Introduction</h1>
<p>Tags: <a href='tag_tutorial.html'>tutorial</a>, <a href='tag_computers.html'>computers</a>, <a href='tag_programming.html'>programming</a>, <a href='tag_assembly.html'>assembly</a>, <a href='tag_how.html'>how</a>, <a href='tag_it.html'>it</a>, <a href='tag_works.html'>works</a>, <a href='tag_beginner.html'>beginner</a>, <a href='tag_introduction.html'>introduction</a></p>
]]></description><link>http://ballmerpeak.web.elte.hu/devblog/how-we-speak-with-computers.html</link>
<guid>http://ballmerpeak.web.elte.hu/devblog/./how-we-speak-with-computers.html</guid>
<dc:creator>Richárd Thier</dc:creator>
<pubDate>Sat, 06 Jul 2019 00:36:00 +0200</pubDate></item>
<item><title>
Short coding tips&amp;tricks 1
</title><description><![CDATA[

<p>Some of my posts take a little long to appear because of the amount of work 
I need to do for preparing them, while I feel there are also a lot of tips I 
can easily share and are still meaningful to others. Because of this I think 
it will be a good idea for me to seperate a series of quick tricks and tips 
related to coding or other areas related to our field.</p>

<p>This is the first post in this short series.</p>

<h1>Tips &amp; tricks</h1>
<p>Tags: <a href='tag_programming.html'>programming</a>, <a href='tag_coding.html'>coding</a>, <a href='tag_tips.html'>tips</a>, <a href='tag_tricks.html'>tricks</a>, <a href='tag_secrets.html'>secrets</a>, <a href='tag_series.html'>series</a></p>
]]></description><link>http://ballmerpeak.web.elte.hu/devblog/short-coding-tipsamptricks-1.html</link>
<guid>http://ballmerpeak.web.elte.hu/devblog/./short-coding-tipsamptricks-1.html</guid>
<dc:creator>Richárd Thier</dc:creator>
<pubDate>Wed, 03 Jul 2019 12:08:00 +0200</pubDate></item>
<item><title>
Debugging HyperZ and fixing a radeon drm linux kernel module
</title><description><![CDATA[

<p>It was only a few days ago I have finished debugging a really heavy bug making 
as big of a <a href="https://www.phoronix.com/scan.php?page=news_item&amp;px=R300-Performance-Fix-2019">mesa performance hit in the userland radeon driver that it became 
a news article on Phoronix</a>. Back then while still on the heavy journey for 
getting my performance back I saw HyperZ was also not enabled for me, but if I 
enable it I gain 10-15% more performance - and an unplayable 3D screen.</p>

<p>On the <a href="http://ballmerpeak.web.elte.hu/devblog/debugging-mesa-and-the-linux-3d-graphics-stack.html">original blog post</a> I have also written about how to troubleshoot 
a performance issue generally, but what to do if you know about a performance 
increasing functionality - just you see it destroys the 3D picture?</p>

<p>Read on if you are interested in linux graphics internals once again ;-)</p>

<h1>Introducing the problem</h1>
<p>Tags: <a href='tag_drm.html'>drm</a>, <a href='tag_hyperz.html'>hyperz</a>, <a href='tag_r300.html'>r300</a>, <a href='tag_radeon.html'>radeon</a>, <a href='tag_linux.html'>linux</a>, <a href='tag_kernel.html'>kernel</a>, <a href='tag_mesa.html'>mesa</a>, <a href='tag_arch.html'>arch</a>, <a href='tag_32bit.html'>32bit</a>, <a href='tag_linux.html'>linux</a>, <a href='tag_debug.html'>debug</a>, <a href='tag_glitches.html'>glitches</a>, <a href='tag_fix.html'>fix</a>, <a href='tag_contribute.html'>contribute</a>, <a href='tag_open-source.html'>open-source</a>, <a href='tag_graphics.html'>graphics</a>, <a href='tag_stack.html'>stack</a>, <a href='tag_analysis.html'>analysis</a>, <a href='tag_3D.html'>3D</a>, <a href='tag_optimization.html'>optimization</a>, <a href='tag_tutorial.html'>tutorial</a>, <a href='tag_system.html'>system</a>, <a href='tag_internals.html'>internals</a>, <a href='tag_hackerman.html'>hackerman</a>, <a href='tag_opengl.html'>opengl</a>, <a href='tag_zbuffer.html'>zbuffer</a>, <a href='tag_hiz.html'>hiz</a>, <a href='tag_zmask.html'>zmask</a>, <a href='tag_documentation.html'>documentation</a></p>
]]></description><link>http://ballmerpeak.web.elte.hu/devblog/debugging-hyperz-and-fixing-a-radeon-drm-linux-kernel-module.html</link>
<guid>http://ballmerpeak.web.elte.hu/devblog/./debugging-hyperz-and-fixing-a-radeon-drm-linux-kernel-module.html</guid>
<dc:creator>Richárd Thier</dc:creator>
<pubDate>Wed, 19 Jun 2019 03:54:00 +0200</pubDate></item>
<item><title>
Debugging mesa and the linux 3D graphics stack
</title><description><![CDATA[

<p>Have you ever wanted to troubleshoot or even contribute to the linux graphics 
stack? Were you ever interested in doing a deep dive? Read on if you dare, but 
do not fear - I was rookie on the topic myself before I went for my hunt on a 
50-1000% slowdown after some updates and a distro change.</p>

<p>I wanted to document the process of delving deep into open source drivers. I 
just wanted to put things together as it might be valuable for others wanting 
to do similar things - I was and still is a rookie for these things after all.</p>

<p>The power of open source: We can fix a more than decade old hardware getting 
a slowdown as easily as a new one! Fuck you planned obsolesence haha!</p>

<h1>Introduction</h1>
<p>Tags: <a href='tag_mesa.html'>mesa</a>, <a href='tag_arch.html'>arch</a>, <a href='tag_32bit.html'>32bit</a>, <a href='tag_linux.html'>linux</a>, <a href='tag_debug.html'>debug</a>, <a href='tag_slowdown.html'>slowdown</a>, <a href='tag_contribute.html'>contribute</a>, <a href='tag_open-source.html'>open-source</a>, <a href='tag_graphics.html'>graphics</a>, <a href='tag_stack.html'>stack</a>, <a href='tag_analysis.html'>analysis</a>, <a href='tag_3D.html'>3D</a>, <a href='tag_optimization.html'>optimization</a>, <a href='tag_tutorial.html'>tutorial</a>, <a href='tag_system.html'>system</a>, <a href='tag_internals.html'>internals</a></p>
]]></description><link>http://ballmerpeak.web.elte.hu/devblog/debugging-mesa-and-the-linux-3d-graphics-stack.html</link>
<guid>http://ballmerpeak.web.elte.hu/devblog/./debugging-mesa-and-the-linux-3d-graphics-stack.html</guid>
<dc:creator>Richárd Thier</dc:creator>
<pubDate>Tue, 11 Jun 2019 00:25:00 +0200</pubDate></item>
<item><title>
Building your own mesa
</title><description><![CDATA[

<p>These days I was doing a debugging session on a slowdown somewhere in the 
linux graphics pipeline of mine after I have changed to arch linux. It have 
turned out to be a bug in mesa, but in order to corner the problem I had to 
compile mesa myself both in latest and earlier versions.</p>

<p>I have found that it is really easy to do so - nearly as "simple" as 
compiling and using your own kernel and it is well documented, but I had to 
use different information from different sites so I thought it is good to 
collect the relevant links in one place.</p>

<h1>Getting sources</h1>
<p>Tags: <a href='tag_mesa.html'>mesa</a>, <a href='tag_build.html'>build</a>, <a href='tag_compile.html'>compile</a>, <a href='tag_tutorial.html'>tutorial</a>, <a href='tag_linux.html'>linux</a></p>
]]></description><link>http://ballmerpeak.web.elte.hu/devblog/building-your-own-mesa.html</link>
<guid>http://ballmerpeak.web.elte.hu/devblog/./building-your-own-mesa.html</guid>
<dc:creator>Richárd Thier</dc:creator>
<pubDate>Tue, 04 Jun 2019 14:34:00 +0200</pubDate></item>
<item><title>
Website and blog speedup tricks
</title><description><![CDATA[

<p>Performant websites and blogs lead to a much better user experience and not
only that, but even google will rank your creations better when optimized.</p>

<p>This blog was always lightweight - until lately when a lot of clutter have 
finally piled up in form of various scripts, third party components along 
with badly optimized pictures. Through this blog post I am documenting the 
"cleanup process", so read on.</p>

<h1>How my blog was performing originally</h1>
<p>Tags: <a href='tag_website.html'>website</a>, <a href='tag_speedup.html'>speedup</a>, <a href='tag_web-development.html'>web-development</a>, <a href='tag_optimization.html'>optimization</a>, <a href='tag_trickz.html'>trickz</a>, <a href='tag_tutorial.html'>tutorial</a>, <a href='tag_blog.html'>blog</a></p>
]]></description><link>http://ballmerpeak.web.elte.hu/devblog/website-and-blog-speedup-tricks.html</link>
<guid>http://ballmerpeak.web.elte.hu/devblog/./website-and-blog-speedup-tricks.html</guid>
<dc:creator>Richárd Thier</dc:creator>
<pubDate>Mon, 01 Apr 2019 23:10:00 +0200</pubDate></item>
</channel></rss>
